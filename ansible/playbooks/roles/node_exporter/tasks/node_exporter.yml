---
- name: Create node exporter config dir
  ansible.builtin.file:
    path: "{{ node_exporter_dir_conf }}"
    state: directory
    owner: "{{ node_exporter_user }}"
    group: "{{ node_exporter_group }}"

- name: Unzip node exporter if not exist
  ansible.builtin.unarchive:
    src: "https://github.com/prometheus/node_exporter/releases/download/v{{ node_exporter_version }}/node_exporter-{{ node_exporter_version }}.linux-{{ __node_exporter_architecture.stdout }}.tar.gz"
    dest: /tmp/
    remote_src: yes
    validate_certs: no
  when: __check_node_exporter_present.stat.exists == false

- name: Move the binary to the final destination
  ansible.builtin.copy:
    src: "/tmp/node_exporter-{{ node_exporter_version }}.linux-{{ __node_exporter_architecture.stdout }}/node_exporter"
    dest: "{{ node_exporter_bin }}"
    owner: "{{ node_exporter_user }}"
    group: "{{ node_exporter_group }}"
    mode: 0755
    remote_src: yes
  when: __check_node_exporter_present.stat.exists == false or __get_node_exporter_version is defined and not __get_node_exporter_version.stdout == node_exporter_version

- name: Clean exporter
  ansible.builtin.file:
    path: /tmp/node_exporter-{{ node_exporter_version }}.linux-{{ __node_exporter_architecture.stdout }}
    state: absent

- name: Install service
  ansible.builtin.template:
    src: ../files/node_exporter.service.j2
    dest: /etc/systemd/system/node_exporter.service
    owner: root
    group: root
    mode: 0755
  notify: reload_daemon_and_restart_node_exporter

- name: Flush handlers
  ansible.builtin.meta: flush_handlers

- name: Service always started
  systemd:
    name: node_exporter
    state: started
    enabled: yes
